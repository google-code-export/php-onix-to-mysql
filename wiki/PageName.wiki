#summary Help & support.
#labels Phase-Support

one question so far:
= Too many redirects error =

Upon trying to process large onix files you can get this error.
For executing this script from a browser you can replace the serverside redirect with a javascript redirect.

*replace:*
{{{
header("Location: ".$uri."?start=".($end+$start-($deleted+1))."&st=".$st."&totaal=".$totaal);
}}}
*with:*
{{{
header("Refresh:0;url=".$uri."?start=".($end+$start-($deleted+1))."&st=".$st."&totaal=".$totaal);
echo 'Progress: '.number_format((($end+$start-($deleted+1))/$size)*100, 1) . '%';
}}}

If you wish to run this script from a cron then try using a tool that allows you to specify the maximum number of redirects.<br>
A tool that works on all platforms is [http://curl.haxx.se/download.html curl].
{{{
curl.exe -L --max-redirs 99999 http://url_to_your_server/path/to/script/onix.php
}}}

*or as an alternative you could increase the $mem value.*


one tweak:
= Minor speed improvement =
This script as is runs with 393 records per second on my server, the here mentioned tweak in my case improves this to 409 records per second. A 4.1% increase in performance.
It is achieved by setting the unique record id directly instead of looping through each productidentifier. In my case I get a field "RecordReference" that contains the ISBN. There is only one such tag, at highest level, that I can assign directly, where there can be many productidentifiers that I cannot assign directly.
*For direct assigning replace:*

{{{
            if(isset($produc->productidentifier)){
               foreach($produc->productidentifier as $value) { 
                   if($value->b221=='03' || $value->b221=='15') $id = mysql_real_escape_string($value->b244);
               }
            } else {
               foreach($produc->ProductIdentifier as $value) { 
                   if($value->ProductIDType=='03' || $value->ProductIDType=='15') $id = mysql_real_escape_string($value->IDValue);
               }
            }
}}}

*with:*
{{{
$id = mysql_real_escape_string($produc->RecordReference);
}}}

where `$produc->RecordReference` should point to a unique value per record